/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.75
 * Generated at: 2017-02-24 17:21:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.service.TaskManager;
import com.model.CompletedTask;
import java.util.List;
import com.model.CompletedTask.CompletedTaskPK;
import com.service.UserManager;
import com.model.Task;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\t");

		//allow access only if session exists
		String user = null;
		if (session.getAttribute("username") == null) {
			response.sendRedirect("Login");
		} else
			user = (String) session.getAttribute("username");
		String userName = null;
		Cookie[] cookies = request.getCookies();
		if (cookies != null) {
			for (Cookie cookie : cookies) {
				if (cookie.getName().equals("username"))
					userName = cookie.getValue();
			}
		}
	
      out.write("\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/mainPage.css\">\n");
      out.write("<meta charset=utf-8>\n");
      out.write("<title>More Each Day</title>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".modal {\n");
      out.write("    display: none; /* Hidden by default */\n");
      out.write("    position: fixed; /* Stay in place */\n");
      out.write("    z-index: 1; /* Sit on top */\n");
      out.write("    padding-top: 100px; /* Location of the box */\n");
      out.write("    left: 0;\n");
      out.write("    top: 0;\n");
      out.write("    width: 100%; /* Full width */\n");
      out.write("    height: 100%; /* Full height */\n");
      out.write("    overflow: auto; /* Enable scroll if needed */\n");
      out.write("    background-color: rgb(0,0,0); /* Fallback color */\n");
      out.write("    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n");
      out.write("}\n");
      out.write(".modal-content {\n");
      out.write("    position: relative;\n");
      out.write("    background-color: rgba(136,136,136,0.9);\n");
      out.write("    margin: auto;\n");
      out.write("    padding-bottom: 20px;\n");
      out.write("    border: 1px solid #888;\n");
      out.write("    width: 80%;\n");
      out.write("    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n");
      out.write("    -webkit-animation-name: animatetop;\n");
      out.write("    -webkit-animation-duration: 0.4s;\n");
      out.write("    animation-name: animatetop;\n");
      out.write("    animation-duration: 0.4s\n");
      out.write("}\n");
      out.write("@-webkit-keyframes animatetop {\n");
      out.write("    from {top:-300px; opacity:0} \n");
      out.write("    to {top:0; opacity:1}\n");
      out.write("}\n");
      out.write("@keyframes animatetop {\n");
      out.write("    from {top:-300px; opacity:0}\n");
      out.write("    to {top:0; opacity:1}\n");
      out.write("}\n");
      out.write(".closeCooking {\n");
      out.write("    color: white;\n");
      out.write("    float: right;\n");
      out.write("    font-size: 28px;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write(".closeCooking:hover,\n");
      out.write(".closeCooking:focus {\n");
      out.write("    color: #000;\n");
      out.write("    text-decoration: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write(".closeHealth {\n");
      out.write("    color: white;\n");
      out.write("    float: right;\n");
      out.write("    font-size: 28px;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write(".closeHealth:hover,\n");
      out.write(".closeHealth:focus {\n");
      out.write("    color: #000;\n");
      out.write("    text-decoration: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write(".closeTravel {\n");
      out.write("    color: white;\n");
      out.write("    float: right;\n");
      out.write("    font-size: 28px;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write(".closeTravel:hover,\n");
      out.write(".closeTravel:focus {\n");
      out.write("    color: #000;\n");
      out.write("    text-decoration: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write(".closeFun {\n");
      out.write("    color: white;\n");
      out.write("    float: right;\n");
      out.write("    font-size: 28px;\n");
      out.write("    font-weight: bold;\n");
      out.write("}\n");
      out.write(".closeFun:hover,\n");
      out.write(".closeFun:focus {\n");
      out.write("    color: #000;\n");
      out.write("    text-decoration: none;\n");
      out.write("    cursor: pointer;\n");
      out.write("}\n");
      out.write(".modal-header {\n");
      out.write("    padding: 2px 16px;\n");
      out.write("    background-color: rgb(92, 184, 92);\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write(".modal-body {\n");
      out.write("\tpadding: 2px 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<header>\n");
      out.write("\n");
      out.write("<div class=\"sidenav\">\n");
      out.write("\t<a href=\"Home\">Home</a> \n");
      out.write("\t<br> \n");
      out.write("\t<a href=\"Profile\">Profile</a> \n");
      out.write("\t<br>\n");
      out.write("\t<p>Categories:</p>\n");
      out.write("\t\t\n");
      out.write("<button id=\"myBtnTravel\" >Travel</button>\n");
      out.write("<div id=\"myModalTravel\" class=\"modal\">\n");
      out.write("  <div class=\"modal-content\">\n");
      out.write("    <div class=\"modal-header\">\n");
      out.write("      <span class=\"closeTravel\">&times;</span>\n");
      out.write("      <h2>Travel Tasks</h2>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"modal-body\">\n");
      out.write("    \t");
 List<Task> traveltasks = TaskManager.getCategoryTasks(userName, 2);
      out.write("\n");
      out.write("    \t<form action=\"Home\" method=\"POST\">\n");
      out.write("    \t");
 for(int i=0;i!=traveltasks.size();i++) { 
      out.write("\n");
      out.write("      \t\t<p>");
      out.print(traveltasks.get(i).getDescription() );
      out.write("</p>\n");
      out.write("      \t\t");
 int id=traveltasks.get(i).getId(); 
      out.write("\n");
      out.write("      \t\t<input type=\"hidden\" name=\"username\" value=\"");
      out.print(userName);
      out.write("\"/>\n");
      out.write("      \t\t<input type=\"hidden\" name=\"taskid\" value=\"");
      out.print(id );
      out.write("\" />\n");
      out.write("      \t\t<input value=\"Complete\" type=\"submit\">\n");
      out.write("      \t\t");
 } 
      out.write("\n");
      out.write("\t     </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\t\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("<button id=\"myBtnFun\" >Fun</button>\n");
      out.write("<div id=\"myModalFun\" class=\"modal\">\n");
      out.write("  <div class=\"modal-content\">\n");
      out.write("    <div class=\"modal-header\">\n");
      out.write("      <span class=\"closeFun\">&times;</span>\n");
      out.write("      <h2>Fun Tasks</h2>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"modal-body\">\n");
      out.write("    \t");
 List<Task> funtasks = TaskManager.getCategoryTasks(userName, 1);
      out.write("\n");
      out.write("    \t<form action=\"Home\" method=\"POST\">\n");
      out.write("    \t");
 for(int i=0;i!=funtasks.size();i++) { 
      out.write("\n");
      out.write("      \t\t<p>");
      out.print(funtasks.get(i).getDescription() );
      out.write("</p>\n");
      out.write("      \t\t");
 int id=funtasks.get(i).getId(); 
      out.write("\n");
      out.write("      \t\t<input type=\"hidden\" name=\"username\" value=\"");
      out.print(userName);
      out.write("\"/>\n");
      out.write("      \t\t<input type=\"hidden\" name=\"taskid\" value=\"");
      out.print(id );
      out.write("\" />\n");
      out.write("      \t\t<input value=\"Complete\" type=\"submit\">\n");
      out.write("      \t\t");
 } 
      out.write("\n");
      out.write("\t     </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("<button id=\"myBtnHealth\" >Health</button>\n");
      out.write("<div id=\"myModalHealth\" class=\"modal\">\n");
      out.write("  <div class=\"modal-content\">\n");
      out.write("    <div class=\"modal-header\">\n");
      out.write("      <span class=\"closeHealth\">&times;</span>\n");
      out.write("      <h2>Health Tasks</h2>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"modal-body\">\n");
      out.write("    \t");
 List<Task> healthtasks = TaskManager.getCategoryTasks(userName, 3);
      out.write("\n");
      out.write("    \t<form action=\"Home\" method=\"POST\">\n");
      out.write("    \t");
 for(int i=0;i!=healthtasks.size();i++) { 
      out.write("\n");
      out.write("      \t\t<p>");
      out.print(healthtasks.get(i).getDescription() );
      out.write("</p>\n");
      out.write("      \t\t");
 int id=healthtasks.get(i).getId(); 
      out.write("\n");
      out.write("      \t\t<input type=\"hidden\" name=\"username\" value=\"");
      out.print(userName);
      out.write("\"/>\n");
      out.write("      \t\t<input type=\"hidden\" name=\"taskid\" value=\"");
      out.print(id );
      out.write("\" />\n");
      out.write("      \t\t<input value=\"Complete\" type=\"submit\">\n");
      out.write("      \t\t");
 } 
      out.write("\n");
      out.write("\t     </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<br>\n");
      out.write("\n");
      out.write("<button id=\"myBtnCooking\" >Cooking</button>\n");
      out.write("<div id=\"myModalCooking\" class=\"modal\">\n");
      out.write("  <div class=\"modal-content\">\n");
      out.write("    <div class=\"modal-header\">\n");
      out.write("      <span class=\"closeCooking\">&times;</span>\n");
      out.write("      <h2>Cooking Tasks</h2>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"modal-body\">\n");
      out.write("    \t");
 List<Task> cookingtasks = TaskManager.getCategoryTasks(userName, 4);
      out.write("\n");
      out.write("    \t<form action=\"Home\" method=\"POST\">\n");
      out.write("    \t");
 for(int i=0;i!=cookingtasks.size();i++) { 
      out.write("\n");
      out.write("      \t\t<p>");
      out.print(cookingtasks.get(i).getDescription() );
      out.write("</p>\n");
      out.write("      \t\t");
 int id=cookingtasks.get(i).getId(); 
      out.write("\n");
      out.write("      \t\t<input type=\"hidden\" name=\"username\" value=\"");
      out.print(userName);
      out.write("\"/>\n");
      out.write("      \t\t<input type=\"hidden\" name=\"taskid\" value=\"");
      out.print(id );
      out.write("\" />\n");
      out.write("      \t\t<input value=\"Complete\" type=\"submit\">\n");
      out.write("      \t\t");
 } 
      out.write("\n");
      out.write("\t     </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\t<form action=\"Logout\" method=\"post\">\n");
      out.write("\t\t<input class=\"button\" type=\"submit\" value=\"Log Out\">\n");
      out.write("\t</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var modalCooking = document.getElementById('myModalCooking');\n");
      out.write("var btnCooking = document.getElementById(\"myBtnCooking\");\n");
      out.write("var spanCooking = document.getElementsByClassName(\"closeCooking\")[0];\n");
      out.write("\n");
      out.write("btnCooking.onclick = function() {\n");
      out.write("\tmodalCooking.style.display=\"block\";\n");
      out.write("}\n");
      out.write("spanCooking.onclick = function() {\n");
      out.write("\tmodalCooking.style.display=\"none\";\n");
      out.write("}\n");
      out.write("window.onclick = function(event) {\n");
      out.write("\tif(event.target == modalCooking) {\n");
      out.write("\t\tmodalCooking.style.display=\"none\";\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var modalHealth = document.getElementById('myModalHealth');\n");
      out.write("var btnHealth = document.getElementById(\"myBtnHealth\");\n");
      out.write("var spanHealth = document.getElementsByClassName(\"closeHealth\")[0];\n");
      out.write("\n");
      out.write("btnHealth.onclick = function() {\n");
      out.write("\tmodalHealth.style.display=\"block\";\n");
      out.write("}\n");
      out.write("spanHealth.onclick = function() {\n");
      out.write("\tmodalHealth.style.display=\"none\";\n");
      out.write("}\n");
      out.write("window.onclick = function(event) {\n");
      out.write("\tif(event.target == modalHealth) {\n");
      out.write("\t\tmodalHealth.style.display=\"none\";\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var modalFun = document.getElementById('myModalFun');\n");
      out.write("var btnFun = document.getElementById(\"myBtnFun\");\n");
      out.write("var spanFun = document.getElementsByClassName(\"closeFun\")[0];\n");
      out.write("\n");
      out.write("btnFun.onclick = function() {\n");
      out.write("\tmodalFun.style.display=\"block\";\n");
      out.write("}\n");
      out.write("spanFun.onclick = function() {\n");
      out.write("\tmodalFun.style.display=\"none\";\n");
      out.write("}\n");
      out.write("window.onclick = function(event) {\n");
      out.write("\tif(event.target == modalFun) {\n");
      out.write("\t\tmodalFun.style.display=\"none\";\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("var modal = document.getElementById('myModalTravel');\n");
      out.write("var btn = document.getElementById(\"myBtnTravel\");\n");
      out.write("var span = document.getElementsByClassName(\"closeTravel\")[0];\n");
      out.write("\n");
      out.write("btn.onclick = function() {\n");
      out.write("    modal.style.display = \"block\";\n");
      out.write("}\n");
      out.write("span.onclick = function() {\n");
      out.write("    modal.style.display = \"none\";\n");
      out.write("}\n");
      out.write("window.onclick = function(event) {\n");
      out.write("    if (event.target == modal) {\n");
      out.write("        modal.style.display = \"none\";\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</header>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t\t<span class=\"greeting\">Hello, ");
      out.print(userName );
      out.write("!</span>\n");
      out.write("\t<div class=\"main-content\">\n");
      out.write("\t\t<div class=\"message\">\n");
      out.write("\t\t\t<h1>More Each Day</h1>\n");
      out.write("\t\t</div>\n");
      out.write("\t\n");
      out.write("\t<div class=\"follows\">\n");
      out.write("\t\n");
      out.write("\t");
 List<CompletedTask> eList = TaskManager.followingUsersTasks(userName); 
      out.write("\n");
      out.write("\t\n");
      out.write("\t<div class=\"list\">\n");
      out.write("\t");
 if(eList!=null) { 
      out.write('\n');
      out.write('	');
 for(int i=0; i!=eList.size();i++) {
      out.write("\n");
      out.write("\t\t<p><em>\n");
      out.write("\t\t");
      out.print((String)UserManager.getUser(eList.get(i).getPk().getUserID()).getUsername() );
      out.write(" \n");
      out.write("\t\t</em>\n");
      out.write("\t\t<span class=\"smallDate\">\n");
      out.write("\t\t");
      out.print( eList.get(i).getTimestamp() );
      out.write("\n");
      out.write("\t\t</span>\n");
      out.write("\t\t</br>\n");
      out.write("\t\t");
      out.print( (String) TaskManager.getTask(eList.get(i).getPk().getTaskID()).getDescription() );
      out.write("</p>\n");
      out.write("\t");
 } }
      out.write("\n");
      out.write("\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
